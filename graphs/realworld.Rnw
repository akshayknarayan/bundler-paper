\begin{figure}
    \centering
<<eval:realworld,fig.showtext=TRUE,cache=TRUE,echo=FALSE,message=FALSE,warning=FALSE,fig.width='\\columnwidth',fig.height=9>>=
library(ggplot2)
library(showtext)
font_add_google("Lato")
showtext_auto()
#library(patchwork)

df <- read.csv("data/udping_results.out", sep=" ")

# show gcp_iowa -> other gcps
df_iowa <- subset(df, src=="gcp_iowa" & grepl("^gcp", dst))

regions <- c(
    "gcp_iowa"="",
    "gcp_belgium"="Belgium",
    "gcp_frankfurt"="Frankfurt",
    "gcp_oregon"="Oregon",
    "gcp_southcarolina"="S. Carolina",
    "gcp_tokyo"="Tokyo"
)

ggplot(df_iowa, aes(
        x=factor(port), y=rtt, fill=Latency, colour=Latency
    )) +
    geom_boxplot(outlier.shape=NA) +
    facet_wrap(src ~ dst, ncol=1, labeller=as_labeller(regions)) +
    coord_cartesian(ylim=c(0, 200)) +
    ylab("Latency") +
    xlab("Request-Response Loops With Unique 5-Tuples") +
    scale_fill_brewer(type="qual", palette=2, aesthetics=c("colour", "fill"),
        limit=c("control", "iperf", "bundler"),
        labels=c(
            "control" = "Base RTT",
            "bundler" = "Bundler",
            "iperf" = "Status Quo"
        )
    ) +
    theme_minimal() + 
    theme(
        legend.position="top",
        legend.title=element_blank(),
        axis.text.x = element_blank(),
        text = element_text(size=18, family="Lato", face="bold"),
        plot.title = element_text(size=18, family="Lato", face="bold", hjust = 0.5)
    )

median_iperf_latency <- quantile(df_iowa[df_iowa$Latency == "iperf",]$rtt, c(0.5))
median_bundler_latency <- quantile(df_iowa[df_iowa$Latency == "bundler",]$rtt, c(0.5))

bw <- read.csv("data/bmon_results.out", sep=" ")
bw_iowa <- subset(bw, src=="gcp_iowa" & grepl("^gcp", dst))

bw_ratio <- function(dst_region) {
    peak_iperf_tput <- quantile(bw_iowa[bw_iowa$Throughput == "iperf" & bw_iowa$dst == dst_region,]$bw, c(0.99))[1]
    peak_bundler_tput <- quantile(bw_iowa[bw_iowa$Throughput == "bundler" & bw_iowa$dst == dst_region,]$bw, c(0.99))[1]
    return(peak_bundler_tput / peak_iperf_tput)
}
#
tokyo_bw_ratio <- bw_ratio("gcp_tokyo")
southcarolina_bw_ratio <- bw_ratio("gcp_southcarolina")
oregon_bw_ratio <- bw_ratio("gcp_oregon")
frankfurt_bw_ratio <- bw_ratio("gcp_frankfurt")
belgium_bw_ratio <- bw_ratio("gcp_belgium")
avg_bw_ratio <- (tokyo_bw_ratio + southcarolina_bw_ratio + oregon_bw_ratio + frankfurt_bw_ratio + belgium_bw_ratio) / 5
@
\newcommand{\realworldMedianLatencyImprovement}{\Sexpr{round(100*(1-(median_bundler_latency[1] / median_iperf_latency[1])), 0)}\%\xspace}
\newcommand{\realworldAvgBwRatio}{\Sexpr{round(100*(1-(avg_bw_ratio)), 0)}\%\xspace}
\caption{On 5 real-Internet paths, \name achieves lower latencies than Status Quo for latency-sensitive traffic. Each bar depicts an individual 5-tuple; load-balancing in the Internet prevents queueing for some 5-tuples. \name still offers scheduling for paths with queueing (achieving \realworldMedianLatencyImprovement lower latencies overall) while achieving overall throughput within \realworldAvgBwRatio of that in the Status Quo scenario.}
    \label{fig:eval:realworld}
\end{figure}

\newcommand{\realworldMedianLatencyImprovement}{\Sexpr{round(100*(1-(median_bundler_latency[1] / median_iperf_latency[1])), 0)}\%\xspace}
\newcommand{\realworldAvgBwRatio}{\Sexpr{round(100*(1-(avg_bw_ratio)), 0)}\%\xspace}
